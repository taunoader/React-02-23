{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISBN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar possibleIsbn10 = /^(?:[0-9]{9}X|[0-9]{10})$/;\nvar possibleIsbn13 = /^(?:[0-9]{13})$/;\nvar factor = [1, 3];\n\nfunction isISBN(isbn, options) {\n  (0, _assertString.default)(isbn); // For backwards compatibility:\n  // isISBN(str [, version]), i.e. `options` could be used as argument for the legacy `version`\n\n  var version = String((options === null || options === void 0 ? void 0 : options.version) || options);\n\n  if (!(options !== null && options !== void 0 && options.version || options)) {\n    return isISBN(isbn, {\n      version: 10\n    }) || isISBN(isbn, {\n      version: 13\n    });\n  }\n\n  var sanitizedIsbn = isbn.replace(/[\\s-]+/g, '');\n  var checksum = 0;\n\n  if (version === '10') {\n    if (!possibleIsbn10.test(sanitizedIsbn)) {\n      return false;\n    }\n\n    for (var i = 0; i < version - 1; i++) {\n      checksum += (i + 1) * sanitizedIsbn.charAt(i);\n    }\n\n    if (sanitizedIsbn.charAt(9) === 'X') {\n      checksum += 10 * 10;\n    } else {\n      checksum += 10 * sanitizedIsbn.charAt(9);\n    }\n\n    if (checksum % 11 === 0) {\n      return true;\n    }\n  } else if (version === '13') {\n    if (!possibleIsbn13.test(sanitizedIsbn)) {\n      return false;\n    }\n\n    for (var _i = 0; _i < 12; _i++) {\n      checksum += factor[_i % 2] * sanitizedIsbn.charAt(_i);\n    }\n\n    if (sanitizedIsbn.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isISBN","_assertString","_interopRequireDefault","require","obj","__esModule","possibleIsbn10","possibleIsbn13","factor","isbn","options","version","String","sanitizedIsbn","replace","checksum","test","i","charAt","_i","module"],"sources":["C:/Users/tauno/Documents/GitHub/React-02-23/bakery-shop/node_modules/validator/lib/isISBN.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISBN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar possibleIsbn10 = /^(?:[0-9]{9}X|[0-9]{10})$/;\nvar possibleIsbn13 = /^(?:[0-9]{13})$/;\nvar factor = [1, 3];\n\nfunction isISBN(isbn, options) {\n  (0, _assertString.default)(isbn); // For backwards compatibility:\n  // isISBN(str [, version]), i.e. `options` could be used as argument for the legacy `version`\n\n  var version = String((options === null || options === void 0 ? void 0 : options.version) || options);\n\n  if (!(options !== null && options !== void 0 && options.version || options)) {\n    return isISBN(isbn, {\n      version: 10\n    }) || isISBN(isbn, {\n      version: 13\n    });\n  }\n\n  var sanitizedIsbn = isbn.replace(/[\\s-]+/g, '');\n  var checksum = 0;\n\n  if (version === '10') {\n    if (!possibleIsbn10.test(sanitizedIsbn)) {\n      return false;\n    }\n\n    for (var i = 0; i < version - 1; i++) {\n      checksum += (i + 1) * sanitizedIsbn.charAt(i);\n    }\n\n    if (sanitizedIsbn.charAt(9) === 'X') {\n      checksum += 10 * 10;\n    } else {\n      checksum += 10 * sanitizedIsbn.charAt(9);\n    }\n\n    if (checksum % 11 === 0) {\n      return true;\n    }\n  } else if (version === '13') {\n    if (!possibleIsbn13.test(sanitizedIsbn)) {\n      return false;\n    }\n\n    for (var _i = 0; _i < 12; _i++) {\n      checksum += factor[_i % 2] * sanitizedIsbn.charAt(_i);\n    }\n\n    if (sanitizedIsbn.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}