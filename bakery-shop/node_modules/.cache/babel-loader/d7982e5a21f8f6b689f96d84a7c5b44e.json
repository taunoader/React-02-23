{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tauno\\\\Documents\\\\GitHub\\\\React-02-23\\\\bakery-shop\\\\src\\\\pages\\\\Employees.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Employees() {\n  _s();\n\n  // TODO: Load data from backend service\n  const [users, setUsers] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://reqres.in/api/users\").then(response => response.json()).then(data => setUsers(data.data)).catch(error => console.error(error));\n  }, []);\n\n  const addEmployee = () => {\n    // TODO: Add validations\n    if (id === \"\" && name === \"\" && email === \"\") return;\n    const [firstname, lastname] = name.split(\" \"); // TODO: Add an employee to the table\n\n    let newUser = {\n      id,\n      first_name: firstname,\n      last_name: lastname,\n      email\n    };\n    const newUsers = [...users, newUser];\n    setUsers(newUsers);\n  };\n\n  const deleteEmployee = index => {// TODO: Delete an employee from the table\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"table table-hover table-bordered table-sortable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [users.map(user => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: `${user.first_name} ${user.last_name}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"danger\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"input-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"ID\",\n                className: \"form-control\",\n                value: id,\n                onChange: e => setId(e.currentTarget.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Name\",\n                className: \"form-control\",\n                value: name,\n                onChange: e => setName(e.currentTarget.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Email\",\n                className: \"form-control\",\n                value: email,\n                onChange: e => setEmail(e.currentTarget.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => addEmployee(),\n                type: \"submit\",\n                variant: \"success\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Employees, \"sECGfMVwCiJAd2zeTtwpueObIog=\");\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"names":["useEffect","useState","Button","Table","Employees","users","setUsers","id","setId","name","setName","email","setEmail","fetch","then","response","json","data","catch","error","console","addEmployee","firstname","lastname","split","newUser","first_name","last_name","newUsers","deleteEmployee","index","map","user","e","currentTarget","value"],"sources":["C:/Users/tauno/Documents/GitHub/React-02-23/bakery-shop/src/pages/Employees.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\n\r\nfunction Employees() {\r\n  // TODO: Load data from backend service\r\n  const [users, setUsers] = useState([]);\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://reqres.in/api/users\")\r\n      .then((response) => response.json())\r\n      .then((data) => setUsers(data.data))\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  const addEmployee = () => {\r\n    // TODO: Add validations\r\n\r\n    if (id === \"\" && name === \"\" && email === \"\") return;\r\n    const [firstname, lastname] = name.split(\" \");\r\n\r\n    // TODO: Add an employee to the table\r\n    let newUser = {\r\n      id,\r\n      first_name: firstname,\r\n      last_name: lastname,\r\n      email,\r\n    };\r\n    const newUsers = [...users, newUser];\r\n    setUsers(newUsers);\r\n  };\r\n\r\n  const deleteEmployee = (index) => {\r\n    // TODO: Delete an employee from the table\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h2 className=\"mb-4\">Employees</h2>\r\n        <Table className=\"table table-hover table-bordered table-sortable\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Email</th>\r\n              {/* <!-- TODO: Add a column for an avatar --> */}\r\n              <th scope=\"col\">Avatar</th>\r\n              <th scope=\"col\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => {\r\n              return (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{`${user.first_name} ${user.last_name}`}</td>\r\n                  <td>{user.email}</td>\r\n                  <td></td>\r\n                  <td>\r\n                    <Button type=\"button\" variant=\"danger\">\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n\r\n            <tr className=\"input-row\">\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"ID\"\r\n                  className=\"form-control\"\r\n                  value={id}\r\n                  onChange={(e) => setId(e.currentTarget.value)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  className=\"form-control\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.currentTarget.value)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  className=\"form-control\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.currentTarget.value)}\r\n                />\r\n              </td>\r\n              <td></td>\r\n              <td>\r\n                <Button\r\n                  onClick={() => addEmployee()}\r\n                  type=\"submit\"\r\n                  variant=\"success\"\r\n                >\r\n                  Add\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Employees;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACnB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,EAAD,EAAKC,KAAL,IAAcP,QAAQ,CAAC,EAAD,CAA5B;EACA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAUX,QAAQ,CAACW,IAAI,CAACA,IAAN,CAF1B,EAGGC,KAHH,CAGUC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAHpB;EAID,CALQ,EAKN,EALM,CAAT;;EAOA,MAAME,WAAW,GAAG,MAAM;IACxB;IAEA,IAAId,EAAE,KAAK,EAAP,IAAaE,IAAI,KAAK,EAAtB,IAA4BE,KAAK,KAAK,EAA1C,EAA8C;IAC9C,MAAM,CAACW,SAAD,EAAYC,QAAZ,IAAwBd,IAAI,CAACe,KAAL,CAAW,GAAX,CAA9B,CAJwB,CAMxB;;IACA,IAAIC,OAAO,GAAG;MACZlB,EADY;MAEZmB,UAAU,EAAEJ,SAFA;MAGZK,SAAS,EAAEJ,QAHC;MAIZZ;IAJY,CAAd;IAMA,MAAMiB,QAAQ,GAAG,CAAC,GAAGvB,KAAJ,EAAWoB,OAAX,CAAjB;IACAnB,QAAQ,CAACsB,QAAD,CAAR;EACD,CAfD;;EAiBA,MAAMC,cAAc,GAAIC,KAAD,IAAW,CAChC;EACD,CAFD;;EAIA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAI,SAAS,EAAC,MAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,SAAS,EAAC,iDAAjB;QAAA,wBACE;UAAA,uBACE;YAAA,wBACE;cAAI,KAAK,EAAC,KAAV;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAI,KAAK,EAAC,KAAV;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAI,KAAK,EAAC,KAAV;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAHF,eAKE;cAAI,KAAK,EAAC,KAAV;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QALF,eAME;cAAI,KAAK,EAAC,KAAV;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QANF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAWE;UAAA,WACGzB,KAAK,CAAC0B,GAAN,CAAWC,IAAD,IAAU;YACnB,oBACE;cAAA,wBACE;gBAAA,UAAKA,IAAI,CAACzB;cAAV;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAA,UAAM,GAAEyB,IAAI,CAACN,UAAW,IAAGM,IAAI,CAACL,SAAU;cAA1C;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAGE;gBAAA,UAAKK,IAAI,CAACrB;cAAV;gBAAA;gBAAA;gBAAA;cAAA,QAHF,eAIE;gBAAA;gBAAA;gBAAA;cAAA,QAJF,eAKE;gBAAA,uBACE,QAAC,MAAD;kBAAQ,IAAI,EAAC,QAAb;kBAAsB,OAAO,EAAC,QAA9B;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QALF;YAAA,GAASqB,IAAI,CAACzB,EAAd;cAAA;cAAA;cAAA;YAAA,QADF;UAaD,CAdA,CADH,eAiBE;YAAI,SAAS,EAAC,WAAd;YAAA,wBACE;cAAA,uBACE;gBACE,IAAI,EAAC,MADP;gBAEE,WAAW,EAAC,IAFd;gBAGE,SAAS,EAAC,cAHZ;gBAIE,KAAK,EAAEA,EAJT;gBAKE,QAAQ,EAAG0B,CAAD,IAAOzB,KAAK,CAACyB,CAAC,CAACC,aAAF,CAAgBC,KAAjB;cALxB;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eAUE;cAAA,uBACE;gBACE,IAAI,EAAC,MADP;gBAEE,WAAW,EAAC,MAFd;gBAGE,SAAS,EAAC,cAHZ;gBAIE,KAAK,EAAE1B,IAJT;gBAKE,QAAQ,EAAGwB,CAAD,IAAOvB,OAAO,CAACuB,CAAC,CAACC,aAAF,CAAgBC,KAAjB;cAL1B;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QAVF,eAmBE;cAAA,uBACE;gBACE,IAAI,EAAC,MADP;gBAEE,WAAW,EAAC,OAFd;gBAGE,SAAS,EAAC,cAHZ;gBAIE,KAAK,EAAExB,KAJT;gBAKE,QAAQ,EAAGsB,CAAD,IAAOrB,QAAQ,CAACqB,CAAC,CAACC,aAAF,CAAgBC,KAAjB;cAL3B;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QAnBF,eA4BE;cAAA;cAAA;cAAA;YAAA,QA5BF,eA6BE;cAAA,uBACE,QAAC,MAAD;gBACE,OAAO,EAAE,MAAMd,WAAW,EAD5B;gBAEE,IAAI,EAAC,QAFP;gBAGE,OAAO,EAAC,SAHV;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QA7BF;UAAA;YAAA;YAAA;YAAA;UAAA,QAjBF;QAAA;UAAA;UAAA;UAAA;QAAA,QAXF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4ED;;GA/GQjB,S;;KAAAA,S;AAiHT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}